---
- name: "Create the gitlab_runner volume"
  become: true
  become_user: "{{ podman_user }}"
  containers.podman.podman_volume:
    name: "gitlab-runner-config"
  register: volume_state

- name: "Define the container volume mountpoint"
  set_fact:
    _volume_path: "{{ volume_state.volume['Mountpoint'] }}"

- name: "Update file with given document: {{ _volume_path }}/config.toml"
  become: yes
  become_user: "gitlab-runner"
  copy:
    mode: 0644
    dest: "{{ _volume_path }}/config.toml"
    content: |
      {{ ansible_managed }}
      {{ config_toml }}
  when: config_toml is defined
  vars:
    ansible_managed: "# ANSIBLE MANAGED FILE - DO NOT EDIT"

- name: "Signing in to registry {{ registry_username }} with user {{ registry_host }} and password"
  become: yes
  become_user: "gitlab-runner"
  containers.podman.podman_login:
    username: "{{ registry_username }}"
    password: "{{ registry_password }}"
    registry: "{{ registry_host }}"
  when:
    - registry_username is defined
    - registry_password is defined
    - registry_host is defined

- name: "Create the gitlab_runner container"
  become: true
  become_user: "{{ podman_user }}"
  containers.podman.podman_container:
    name: "gitlab-runner"
    state: started
    image: "{{ runner_image }}"
    privileged: false
    env:
      DOCKER_HOST: "unix:///var/run/podman/podman.sock"
    generate_systemd:
      path: "{{ podman_user_home }}/.config/systemd/user"
      restart_policy: "on-failure"

- name: "Enable Systemd for {{ item }}"
  become_user: "{{ podman_user }}"
  become: true
  systemd:
    enabled: true
    scope: user
    name: "container-gitlab-runner"
    daemon_reload: true
